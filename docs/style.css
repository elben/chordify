/* Colors from https://www.colourlovers.com/palette/2778385/Hawaii_sunset */

* {
  box-sizing: border-box;
}

body {
  font-size: 16px;
  font-family: Arial Unicode MS, Avenir Next, sans-serif;
}

h1 {
  font-size: 2em;
  margin-top: 0;
  margin-bottom: 0;
}

h2 {
  font-size: 1.2em;
  font-weight: normal;
  margin-top: 0;
  margin-bottom: 0.5em;
}

h3 {
  font-size: 1.2em;
  margin-bottom: 0.5em;
}

a {
  color: #FE8071;
}

a:hover {
  color: #FE8071;
}

.structure {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

.footer {
  margin-top: 5em;
  font-size: 0.8em;
  color: #888;
}

.top-component {
  display: flex;
  flex-direction: row;
}

.fretboard-active {
  padding-left: 2em;

  /* Align with left-hand-side components */
  padding-top: 70px;
}

.fretboards {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
}

.fretboard {
  padding-right: 2em;
  padding-top: 2em;
}

.chord-meta {
  display: flex;
  flex-direction: row;

  width: 180px;
  height: 65px;
  line-height: 35px;
  background: #FED96F;
  color: #9D691A;
  border-radius: 10px;
  border: 3px solid #333;
  border-bottom: 30px solid #333;
}

.chord-meta-item {
  flex-basis: 33%;
}

.hidden {
  display: none;
}

.chord-actions {
  display: flex;
  flex-direction: row-reverse;
  padding-bottom: 0.2em;
}

.chord-action-delete {
  border-radius: 100%;
  background-color: #ccc;
  color: #555;
  width: 20px;
  height: 20px;
  text-align: center;
  line-height: 20px;
}

.chord-action-delete:hover {
  background-color: #aaa;
}

.chord-info {
  text-align: center;
}

.chord-info sup {
  /* So that <sup> doesn't push the .chord-info text down. */
  line-height: 0;
}

.string {
  width: 50px;
  float: left;
  padding-left: 15px;
}

.fret {
  width: 50px;
  height: 50px;
  display: block;
  border-bottom: 5px solid #333;
  border-left: 2px solid #333;
}

/* Open strings */
.fret:first-child {
  background-color: transparent;
  height: 30px;
  margin-top: -30px;
  border-radius: 0;
  border-left: none;
  border-bottom: none;
}

/* Open strings */
.string .fret:first-child .circle {
  background-color: #333;
  color: #eee;

  /* Use content-box sizing so that visually it looks the same size as the other circles,
   * which don't have borders. */
  box-sizing: content-box;

  height: 30px;
  background-color: transparent;
  border: none;
  transform: translate3d(-50%, 0, 0);
}

/* Open strings */
.string:last-child .fret:first-child {
  height: 30px;
}

/* When a string shouldn't be played */
.string .fret:first-child .circle.no-play {
  /* background-color: #e69868; */
}

.string:last-child .fret {
  border-bottom: none;
  height: 50px;
}

.circle {
  border-radius: 100%;
  background-color: #333;
  color: #ffffff;
  width: 30px;
  height: 30px;
  display: block;
  position: absolute;
  transform: translate3d(-50%, 25%, 0);
}

.circle.barre {
  width: 50px;
  border-radius: unset;
}

.circle.barre.first {
  border-bottom-left-radius: 15px;
  border-top-left-radius: 15px;
}

.circle.barre.last {
  border-bottom-right-radius: 15px;
  border-top-right-radius: 15px;
}

.circle-info {
  width: 30px;
  height: 30px;
  display: block;
  transform: translate3d(0%, 20%, 0);
  text-align: center;
  font-size: 0.9em;

  margin-left: auto;
  margin-right: auto;
}

.fret-marker {
  transform: translate3d(0%, 15%, 0);
  position: absolute;
  width: 50px;
  height: 50px;
  font-size: 1.5em;
  text-align: center;
}

.chord-selector-section {
  flex-basis: 50%;
  max-width: 400px;
}

.selector-section {
  display: flex;
  flex-wrap: wrap;
}

.selection {
  min-width: 45px;
  height: 45px;
  line-height: 45px;
  text-align: center;

  float: left;
  margin: 0 10px 5px 0;
  padding: 0 10px;
  color: #eee;
}

.selection.wide {
  min-width: 100px;
}

.clickable {
  cursor: pointer;
}

.not-clickable {
  cursor: not-allowed;
}

.btn {
  background: #222;
  border-radius: 13px;

  /* Don't allow user to select text. Make it behave more like a button.
   * https://stackoverflow.com/questions/6900124/how-to-make-certain-text-not-selectable-with-css
   */
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
}

.btn:hover {
  background: #FED96F;
  color: #9D691A;
}

.btn.selected {
  background: #FED96F;
  color: #9D691A;
}

.btn.not-clickable {
  background: #999;
}

.btn.not-clickable:hover {
  background: #aaa;
}

.add-chord {
  margin-top: 1em;
  background: #FE8071;
  color: #fff;
}

.add-chord:hover {
  background: rgb(252, 163, 153);
  color: #fff;
}

.added-fretboards h3 {
  margin-bottom: -1em;
}

.hide {
  display: none;
}

.search {
  position: relative;
}

.search input {
  font-family: Arial Unicode MS, Avenir Next, sans-serif;
  font-size: 1em;
  border: 3px solid #FE8071;
  border-radius: 4px;
  line-height: 2;
  padding: 0.21em 0.512em;
  width: 100%;
}

.search input:focus {
  outline: 2px solid #FFDCD8;
}

.search-results {
  position: absolute;

  /* This, combined with .search's position relative allows the .search-result
  rows (below) to stretch the entire width of the LHS components. */
  left: 0;
  right: 0;
}

.search-result {
  font-size: 1em;
  background-color: #FFDCD8;
  padding: 0.5em 0 0.5em 1em;
  border-bottom: 1px solid #FE8071;
  cursor: pointer;
}

.search-result:hover {
  background-color: #FF998D;
}

.search-result.selected {
  background-color: #FF998D;
}

@media (hover: none) { 
  /* Custom css for devices where the primary input mechanism cannot hover 
   * at all or cannot conveniently hover.
   * https://stackoverflow.com/questions/12469875/how-to-code-css-media-queries-targeting-all-mobile-devices-and-tablets/42835826#42835826
   */

   /* There's a weird bug on iOS Safari where, after clicking on a search result
   row, the root note selector button *behind* the search result row is
   triggered as "hovered". This makes it look as if there are *two* buttons
   selected: (1) the real one and (2) the one that is accidentally "hovered"
   over.

   This doesn't happen on desktop. So we purposefully target this fix only for
   devices where they shouldn't have an ability to hover.

   If we only had .btn:hover here, when we actually do select a button, the
   color doesn't change b/c the new button is marked as hovered, thus taking
   on this CSS. So what we need to do is do a more specific selector to make the
   color "correct" again for selected buttons. Hence, we target
   .btn.selected:hover, to handle buttons that are selected AND hovered over.
    */
  .btn:hover {
    background: #222;
    color: #fff;
  }

  .btn.selected:hover {
    background: #FED96F;
    color: #9D691A;
  }
}

@media (max-width: 600px) {

  h1 {
    font-size: 1.5em;
  }

  h2 {
    font-size: 1em;
  }

  .top-component {
    flex-direction: column;
  }

  .selection {
    min-width: 50px;
    height: 35px;
    line-height: 35px;
  }

  .fretboard-active {
    margin-left: auto;
    margin-right: auto;


    /*
     * Clear padding because we're centering it. he padding needed is handled by
     * .fretboard *
     */
    padding-left: 0;

    /*
     * No need for top padding since we're not trying to align with the
     * eft-hand-side components. *
     */
    padding-top: 0;
  }
  .fretboard {
    margin-left: auto;
    margin-right: auto;

    /* Make it look centered. */
    padding-left: 1.6em;
  }
}